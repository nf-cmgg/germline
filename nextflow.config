/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-cmgg/germline Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                      = null
    ped                        = null

    // Pipeline specific parameters
    scatter_count              = 40
    filter                     = false
    annotate                   = false
    gemini                     = false
    add_ped                    = false
    validate                   = false
    roi                        = null
    project                    = null
    skip_date_project          = false
    only_call                  = false
    only_merge                 = false
    output_genomicsdb          = false
    callers                    = "haplotypecaller"
    vardict_min_af             = 0.1   // Minimum allele frequency for VarDict
    normalize                  = false
    output_suffix              = ""
    only_pass                  = false
    keep_alt_contigs           = false
    updio                      = false
    automap                    = false
    hc_phasing                 = false

    // Module specific parameters
    dragstr                    = false
    somalier_sites             = "https://github.com/brentp/somalier/files/3412456/sites.hg38.vcf.gz"
    mosdepth_slow              = false
    merge_distance             = 100000
    updio_common_cnvs          = null

    // VEP plugins to use
    vep_dbnsfp                 = false
    vep_spliceai               = false
    vep_spliceregion           = false
    vep_mastermind             = false
    vep_maxentscan             = false
    vep_eog                    = false
    vep_alphamissense          = false

    // VEP parameters
    vep_chunk_size             = 50000
    vep_merged                 = true
    species                    = "homo_sapiens"
    vep_version                = 105.0
    vep_cache_version          = 105

    // VCFanno parameters
    vcfanno                    = false
    vcfanno_lua                = null

    // Automap parameters
    automap_repeats            = null
    automap_panel              = null
    automap_panel_name         = "cmgg_bio"

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = "${projectDir}/assets/CMGG_logo.png"
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // References
    cmgg_config_base           = "/conf/"
    igenomes_base              = null //'s3://ngi-igenomes/igenomes'
    igenomes_ignore            = true
    genome                     = "GRCh38"
    genomes_base               = "/references/"
    genomes_ignore             = false

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params                  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') ? "${params.custom_config_base}/nfcore_custom.config" : "conf/empty.config"

// Include test data config
includeConfig !System.getenv('NXF_OFFLINE') ? 'https://raw.githubusercontent.com/nf-cmgg/test-datasets/main/nf-cmgg-testdata.config' : "conf/empty.config"

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test            { includeConfig 'conf/test.config'          }
    test_full       { includeConfig 'conf/test_full.config'     }
    nf_test         { includeConfig 'conf/nf_test.config'       }

    seqplorer       { includeConfig 'conf/seqplorer.config'     }
    seqcap          { includeConfig 'conf/seqcap.config'        }
    hypercap        { includeConfig 'conf/hypercap.config'      }

}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    failUnrecognisedParams = false
    lenientMode            = false
    defaultIgnoreParams    = ['genomes','igenomes_base','test_data']
    showHiddenParams       = false
    help {
        enabled = true
        //beforeText = TODO
        //afterText = TODO
        command = "nextflow run nf-cmgg/germline -profile docker --input <samplesheet> --outdir <output_directory>"
    }
}

includeConfig !params.igenomes_ignore ? "conf/igenomes.config" : !params.genomes_ignore ? "https://raw.githubusercontent.com/nf-cmgg/configs/main/conf/Hsapiens/genomes.config" : "conf/empty_genomes.config"

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')}.html"
}
report {
    enabled = true
    file    = timeline.file.replace("timeline", "report")
}
trace {
    enabled = true
    file    = timeline.file.replace("timeline", "trace")
}
dag {
    enabled = true
    file    = timeline.file.replace("execution_timeline", "pipeline_dag")
}

manifest {
    name            = 'nf-cmgg/germline'
    author          = """nvnieuwk"""
    homePage        = 'https://github.com/nf-cmgg/germline'
    description     = """A nextflow pipeline for calling and annotating small germline variants from short DNA reads for WES and WGS data"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.0'
    version         = '1.8.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
