nextflow_pipeline {

    name "Full pipeline test"
    script "main.nf"
    tag "full_wes"

    test("Success") {

        when {
            params {
                filter   = true
                annotate = true
                gemini   = true
                add_ped  = true
                validate = true
                callers  = "haplotypecaller,deepvariant"

                vcfanno           = true
                vcfanno_config    = "https://github.com/nf-core/test-datasets/raw/modules/data/genomics/homo_sapiens/genome/vcf/vcfanno/vcfanno.toml"
                vcfanno_resources = "https://github.com/brentp/vcfanno/raw/master/example/exac.vcf.gz,https://github.com/brentp/vcfanno/raw/master/example/exac.vcf.gz.tbi"

            }
        }

        then {
            assert workflow.success
            assert file("${outputDir}/ready/Proband_12345/reports/Proband_12345.deepvariant.bcftools_stats.txt").exists()
            assert file("${outputDir}/ready/Proband_12345/reports/Proband_12345.haplotypecaller.bcftools_stats.txt").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.deepvariant.vcf.gz").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.deepvariant.db").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.deepvariant.ped").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.deepvariant.bed").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.deepvariant.samples.tsv").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.haplotypecaller.vcf.gz").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.haplotypecaller.db").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.haplotypecaller.ped").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.haplotypecaller.bed").exists()
            assert file("${outputDir}/ready/Proband_12345/Proband_12345.haplotypecaller.samples.tsv").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/reports/NA24385D2_NVQ_034.deepvariant.bcftools_stats.txt").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/reports/NA24385D2_NVQ_034.haplotypecaller.bcftools_stats.txt").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/NA24385D2_NVQ_034.deepvariant.g.vcf.gz").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/NA24385D2_NVQ_034.deepvariant.g.vcf.gz.tbi").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/NA24385D2_NVQ_034.haplotypecaller.g.vcf.gz").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/NA24385D2_NVQ_034.haplotypecaller.g.vcf.gz.tbi").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/NA24385D2_NVQ_034.callable.bed").exists()
            assert file("${outputDir}/individuals/NA24385D2_NVQ_034/NA24385D2_NVQ_034.bed").exists()
            assert file("${outputDir}/individuals/DNA049572/DNA049572.deepvariant.g.vcf.gz").exists()
            assert file("${outputDir}/individuals/DNA049572/DNA049572.deepvariant.g.vcf.gz.tbi").exists()
            assert file("${outputDir}/individuals/DNA049572/DNA049572.haplotypecaller.g.vcf.gz").exists()
            assert file("${outputDir}/individuals/DNA049572/DNA049572.haplotypecaller.g.vcf.gz.tbi").exists()
            assert file("${outputDir}/individuals/DNA049572/DNA049572.callable.bed").exists()
            assert file("${outputDir}/individuals/DNA049572/DNA049572.bed").exists()
            assert file("${outputDir}/multiqc_reports/multiqc_report.html").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.fn.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.fn.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.fp.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.fp.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.non_snp_roc.tsv.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.phasing.txt").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.png").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.snp_roc.tsv.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.summary.txt").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.svg").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.tp-baseline.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.tp-baseline.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.tp.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.tp.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.deepvariant.weighted_roc.tsv.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.fn.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.fn.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.fp.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.fp.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.non_snp_roc.tsv.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.phasing.txt").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.png").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.snp_roc.tsv.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.summary.txt").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.svg").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.tp-baseline.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.tp-baseline.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.tp.vcf.gz").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.tp.vcf.gz.tbi").exists()
            assert file("${outputDir}/validation/DNA049572/DNA049572.haplotypecaller.weighted_roc.tsv.gz").exists()
        }
    }
}
