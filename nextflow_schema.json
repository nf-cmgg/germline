{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/CenterForMedicalGeneticsGhent/nf-cmgg-germline/master/nextflow_schema.json",
    "title": "CenterForMedicalGeneticsGhent/nf-cmgg-germline pipeline parameters",
    "description": "A nextflow pipeline for calling and annotating variants",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.(csv|tsv|yaml|yml)$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with samples, and a header row. See [usage docs](./usage.md).",
                    "fa_icon": "fas fa-file-csv",
                    "mimetype": "text/plain"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "default": "GRCh38",
                    "description": "Reference genome build",
                    "help_text": "Requires a Genome Reference Consortium reference ID (e.g. GRCh38)"
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. The path to the reference genome fasta.",
                    "fa_icon": "far fa-file-code"
                },
                "fai": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fai$",
                    "description": "Path to FASTA genome index file.",
                    "fa_icon": "far fa-file-code"
                },
                "dict": {
                    "type": "string",
                    "pattern": "^\\S+\\.dict$",
                    "description": "Path to the sequence dictionary generated from the FASTA reference",
                    "fa_icon": "far fa-file-code",
                    "format": "file-path",
                    "mimetype": "text/plain"
                },
                "strtablefile": {
                    "type": "string",
                    "description": "Path to the STR table file generated from the FASTA reference",
                    "fa_icon": "fas fa-folder",
                    "format": "path"
                },
                "sdf": {
                    "type": "string",
                    "description": "Path to the SDF folder generated from the reference FASTA file",
                    "format": "path",
                    "fa_icon": "fas fa-folder"
                },
                "genomes_base": {
                    "type": "string",
                    "default": "/references/",
                    "description": "Directory base for CMGG reference store (used when --genomes_ignore false is specified)",
                    "fa_icon": "fas fa-download",
                    "format": "directory-path"
                },
                "cmgg_config_base": {
                    "type": "string",
                    "default": "/conf/",
                    "description": "The base directory for the local config files",
                    "fa_icon": "fas fa-folder",
                    "hidden": true
                },
                "genomes_ignore": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Do not load the local references from the path specified with --genomes_base",
                    "fa_icon": "fas fa-ban"
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`.",
                    "default": true
                }
            },
            "required": ["fasta"]
        },
        "pipeline_specific_parameters": {
            "title": "Pipeline specific parameters",
            "type": "object",
            "description": "Parameters that define how the pipeline works",
            "default": "",
            "properties": {
                "scatter_count": {
                    "type": "integer",
                    "default": 40,
                    "description": "The amount of scattering that should happen per sample.",
                    "help_text": "Increase this number to increase the pipeline run speed, but at the tradeoff of using more IO and disk space. This can differ from the actual scatter count in some cases (especially with smaller files).\nThis has an effect on HaplotypeCaller, GenomicsDBImport and GenotypeGVCFs.",
                    "minimum": 1
                },
                "callers": {
                    "type": "string",
                    "default": "haplotypecaller",
                    "description": "A comma-delimited list of callers to use",
                    "help_text": "Options: \"haplotypecaller,deepvariant\""
                },
                "merge_distance": {
                    "type": "integer",
                    "default": 10000,
                    "description": "The merge distance for genotype BED files",
                    "help_text": "Increase this parameter if GenomicsDBImport is running slow. This defines the maximum distance between intervals that should be merged. The less intervals GenomicsDBImport actually gets, the faster it will run."
                },
                "dragstr": {
                    "type": "boolean",
                    "description": "Create DragSTR models to be used with HaplotypeCaller",
                    "help_text": "This currently is only able to run single-core per sample. Due to this, the process is very slow with only very small improvements to the analysis. It currently isn't advised to use this parameter unless you are willing to wait a lot longer."
                },
                "validate": {
                    "type": "boolean",
                    "description": "Validate the found variants",
                    "help_text": "This only validates individual sample GVCFs that have truth VCF supplied to them via the samplesheet (in row `truth_vcf`, with an optional index in the `truth_tbi` row)"
                },
                "filter": {
                    "type": "boolean",
                    "description": "Filter the found variants"
                },
                "annotate": {
                    "type": "boolean",
                    "description": "Annotate the found variants"
                },
                "add_ped": {
                    "type": "boolean",
                    "description": "Add PED INFO header lines to the final VCFs"
                },
                "gemini": {
                    "type": "boolean",
                    "description": "Create a Gemini databases from the final VCFs"
                },
                "coverage_fast": {
                    "type": "boolean",
                    "description": "Run mosdepth in fast-mode",
                    "help_text": "This is advised if you don't need exact coverage BED files as output"
                },
                "roi": {
                    "type": "string",
                    "description": "Path to the default ROI (regions of interest) BED file to be used for WES analysis",
                    "help_text": "This will be used for all samples that do not have a specific ROI file supplied to them through the samplesheet. Don't supply an ROI file to run the analysis as WGS.",
                    "format": "file-path",
                    "pattern": "^\\S+\\.bed(\\.gz)?$",
                    "mimetype": "text/plain"
                },
                "dbsnp": {
                    "type": "string",
                    "description": "Path to the dbSNP VCF file",
                    "fa_icon": "far fa-file-alt",
                    "format": "file-path",
                    "pattern": "^\\S+\\.vcf\\.gz$",
                    "mimetype": "text/plain"
                },
                "dbsnp_tbi": {
                    "type": "string",
                    "description": "Path to the index of the dbSNP VCF file",
                    "fa_icon": "far fa-file-alt",
                    "format": "file-path",
                    "pattern": "^\\S+\\.tbi$",
                    "mimetype": "text/plain"
                },
                "somalier_sites": {
                    "type": "string",
                    "default": "https://github.com/brentp/somalier/files/3412456/sites.hg38.vcf.gz",
                    "fa_icon": "far fa-file-alt",
                    "description": "Path to the VCF file with sites for Somalier to use",
                    "pattern": "^\\S+\\.vcf\\.gz",
                    "format": "file-path",
                    "mimetype": "text/plain"
                }
            },
            "required": ["scatter_count"]
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle"
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"]
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported."
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog"
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image"
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "hidden": true
                }
            }
        },
        "annotation_parameters": {
            "title": "Annotation parameters",
            "type": "object",
            "description": "Parameters to configure Ensembl VEP and VCFanno",
            "default": "",
            "properties": {
                "species": {
                    "type": "string",
                    "default": "homo_sapiens",
                    "description": "The species of the samples",
                    "fa_icon": "fas fa-user-circle",
                    "pattern": "^[a-z_]*$",
                    "help_text": "Must be lower case and have underscores as spaces"
                },
                "vep_merged": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specify if the VEP cache is a merged cache"
                },
                "vep_cache": {
                    "type": "string",
                    "default": "None",
                    "description": "The path to the VEP cache",
                    "format": "path"
                },
                "vep_dbnsfp": {
                    "type": "boolean",
                    "description": "Use the dbNSFP plugin with Ensembl VEP",
                    "fa_icon": "fas fa-question-circle",
                    "help_text": "The '--dbnsfp' and '--dbnsfp_tbi' parameters need to be specified when using this parameter."
                },
                "vep_spliceai": {
                    "type": "boolean",
                    "description": "Use the SpliceAI plugin with Ensembl VEP",
                    "fa_icon": "fas fa-question-circle",
                    "help_text": "The '--spliceai_indel', '--spliceai_indel_tbi', '--spliceai_snv' and '--spliceai_snv_tbi' parameters need to be specified when using this parameter."
                },
                "vep_spliceregion": {
                    "type": "boolean",
                    "description": "Use the SpliceRegion plugin with Ensembl VEP",
                    "fa_icon": "fas fa-question-circle"
                },
                "vep_mastermind": {
                    "type": "boolean",
                    "description": "Use the Mastermind plugin with Ensembl VEP",
                    "fa_icon": "fas fa-question-circle",
                    "help_text": "The '--mastermind' and '--mastermind_tbi' parameters need to be specified when using this parameter."
                },
                "vep_maxentscan": {
                    "type": "boolean",
                    "description": "Use the MaxEntScan plugin with Ensembl VEP",
                    "fa_icon": "fas fa-question-circle",
                    "help_text": "The '--maxentscan' parameter need to be specified when using this parameter."
                },
                "vep_eog": {
                    "type": "boolean",
                    "description": "Use the custom EOG annotation with Ensembl VEP",
                    "fa_icon": "fas fa-question-circle",
                    "help_text": "The '--eog' and '--eog_tbi' parameters need to be specified when using this parameter."
                },
                "vep_version": {
                    "type": "string",
                    "default": "105.0",
                    "description": "The version of the VEP tool to be used",
                    "fa_icon": "fas fa-code-branch",
                    "pattern": "^\\d\\d\\d?\\.\\d"
                },
                "vep_cache_version": {
                    "type": "string",
                    "default": "105",
                    "description": "The version of the VEP cache to be used",
                    "fa_icon": "fas fa-code-branch"
                },
                "dbnsfp": {
                    "type": "string",
                    "description": "Path to the dbSNFP file",
                    "format": "file-path",
                    "fa_icon": "far fa-file-alt",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.gz$"
                },
                "dbnsfp_tbi": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the index of the dbSNFP file",
                    "fa_icon": "far fa-file-alt",
                    "pattern": "^\\S+\\.csi$",
                    "mimetype": "text/plain"
                },
                "spliceai_indel": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the VCF containing indels for spliceAI",
                    "fa_icon": "far fa-file-alt",
                    "pattern": "^\\S+\\.vcf\\.gz$",
                    "mimetype": "text/plain"
                },
                "spliceai_indel_tbi": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the index of the VCF containing indels for spliceAI",
                    "pattern": "^\\S+\\.tbi$",
                    "mimetype": "text/plain"
                },
                "spliceai_snv": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the VCF containing SNVs for spliceAI",
                    "pattern": "^\\S+\\.vcf\\.gz$",
                    "mimetype": "text/plain"
                },
                "spliceai_snv_tbi": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the index of the VCF containing SNVs for spliceAI",
                    "pattern": "^\\S+\\.tbi$",
                    "mimetype": "text/plain"
                },
                "mastermind": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the VCF for Mastermind",
                    "pattern": "^\\S+\\.vcf\\.gz$",
                    "mimetype": "text/plain"
                },
                "mastermind_tbi": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the index of the VCF for Mastermind",
                    "pattern": "^\\S+\\.tbi$",
                    "mimetype": "text/plain"
                },
                "maxentscan": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to the MaxEntScan executable directory"
                },
                "eog": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the VCF containing EOG annotations",
                    "pattern": "^\\S+\\.vcf\\.gz$",
                    "mimetype": "text/plain"
                },
                "eog_tbi": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the index of the VCF containing EOG annotations",
                    "pattern": "^\\S+\\.tbi$",
                    "mimetype": "text/plain"
                },
                "vcfanno": {
                    "type": "boolean",
                    "description": "Run annotations with vcfanno"
                },
                "vcfanno_config": {
                    "type": "string",
                    "description": "The path to the VCFanno config TOML",
                    "pattern": "^\\S+\\.toml$",
                    "format": "file-path",
                    "mimetype": "text/plain"
                },
                "vcfanno_lua": {
                    "type": "string",
                    "description": "The path to a Lua script to be used in VCFanno",
                    "pattern": "^\\S+\\.lua$",
                    "format": "file-path",
                    "mimetype": "text/plain"
                },
                "vcfanno_resources": {
                    "type": "string",
                    "description": "A comma-seperated list of resource files for VCFanno, please also supply their indices using this parameter"
                }
            },
            "help_text": "Annotation will only run when `--annotate true` is specified."
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/pipeline_specific_parameters"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/annotation_parameters"
        }
    ]
}
